// This file was generated by Slater.app - gsap-new-animations.js

gsap.registerPlugin(ScrollTrigger);

// Split text into spans
let typeSplit = new SplitType("[text-split]", {
  types: "lines, words, chars",
});
$(".line").wrap('<div class="line-wrapper">');

function createScrollTrigger(triggerElement, timeline, start) {
  ScrollTrigger.create({
    trigger: triggerElement,
    //start: "top 95%",
    start: start,
    //markers: true,
    onEnter: () => timeline.play(),
  });
}

gsap.set("[gsap-opacity-top]", { opacity: 1 });
gsap.set("[gsap-image-reveal-from-top]", { opacity: 1 });
gsap.set("[gsap-stagger-opacity]", { opacity: 1 });
gsap.set(".hero-anim-start", { opacity: 1 });
//gsap.set("[gsap-line-reveal]", { opacity: 1 });

$("[gsap-letter-by-letter]").each(function (index) {
  let tl = gsap.timeline({ paused: true });
  tl.from($(this).find(".char"), {
    yPercent: 100,
    duration: 0.5,
    ease: "power3.out",
    stagger: { amount: 0.15 },
    onComplete: () => {
      tl.revert();
    },
  });
  createScrollTrigger($(this), tl, "top 95%");
});

$("[subtitle-split]").each(function (index) {
  let tl = gsap.timeline({ paused: true });
  tl.from($(this).find(".word"), {
    opacity: 0.8,
    yPercent: 100,
    duration: 0.7,
    ease: "power3.out",
    stagger: { amount: 0.02 },
    onComplete: () => {
      tl.revert();
    },
  });
  createScrollTrigger($(this), tl, "top 95%");
});

$("[gsap-line-reveal]").each(function (index) {
  let tl = gsap.timeline({ paused: true });
  tl.from($(this).find(".line"), {
    yPercent: 100,
    opacity: 0,
    duration: 0.8,
    ease: "power4.inOut",
    stagger: { amount: 0.05 },
    //onComplete: () => {
    //tl.revert();
    //}
  });
  createScrollTrigger($(this), tl, "top 95%");
});

//Footer Links
//—————————————————————————————————————
var footerLinks = document.querySelectorAll("[footer-link]");

// Stagger the animations between elements
let footerTL = gsap.timeline({ paused: true });
footerTL.from(footerLinks, {
  opacity: 0, // Start opacity
  y: 50, // Y position
  duration: 0.5, // Duration of animation
  stagger: 0.03, // Stagger between elements
  ease: "power2.out",
});
createScrollTrigger(footerLinks, footerTL, "top 95%");

//AUTO Letter Opacity
//—————————————————————————————————————
$("[gsap-auto-letter-opacity]").each(function (index) {
  gsap.from($(this).find(".char"), {
    scrollTrigger: {
      trigger: $(this),
      start: "top 80%", // Change this value to adjust when the animation starts
    },
    opacity: 0.0,
    duration: 0.5,
    stagger: 0.01, // Adjust the value to control the delay between each letter
    ease: "power2.inOut",
  });
});

//Letter Opacity
//—————————————————————————————————————
$("[gsap-letter-opacity]").each(function (index) {
  gsap.from($(this).find(".char"), {
    scrollTrigger: {
      trigger: $(this),
      start: "top 80%", // Change this value to adjust when the animation starts
      end: "bottom 55%", // Change this value to adjust when the animation ends
      scrub: true, // Smooth animation during scrolling
    },
    opacity: 0.4,
    stagger: 0.1, // Adjust the value to control the delay between each letter
    ease: "power2.inOut",
  });
});

// IMAGE REVEAL
//—————————————————————————————————————

//IMAGE REVEAL FROM TOP
$("[gsap-image-reveal-from-top]").each(function (index) {
  let mask = $(this);
  let imageHolder = $(this).find(".image-reveal-holder");

  const tl = gsap.timeline({
    defaults: {
      duration: 1.3, // Default duration (1 second)
      ease: "power2.inOut", // Default easing
    },
    paused: true, // Initially paused
  });

  tl.from(mask, {
    yPercent: -100,
  }).from(
    imageHolder,
    {
      yPercent: 100,
    },
    "<",
  );

  ScrollTrigger.create({
    //trigger: mask,
    trigger: imageHolder,
    start: "top 82%",
    onEnter: function () {
      tl.play();
    },
  });
});

// SUBMIT APPLICATION HOVER
//—————————————————————————————————————
//—————————————————————————————————————
$(".open-position_component").each(function (index, element) {
  var submitApplicationTL = gsap.timeline({ paused: true });

  submitApplicationTL.from(
    $(this).find(".application-button-wrapper").find(".char"),
    {
      yPercent: 100,
      duration: 0.2,
      opacity: 0,
      ease: "power4.inOut",
      stagger: {
        each: 0.02,
        from: "start",
      },
    },
  );

  $(element).hover(
    function () {
      submitApplicationTL.play();
    },
    function () {
      submitApplicationTL.reverse();
    },
  );
});

//GSAP OPPACITY TOP
//—————————————————————————————————————
//
$("[gsap-opacity-top]").each(function (index, element) {
  let item = $(this);

  let tl = gsap.timeline({ paused: true });
  tl.from(item, {
    yPercent: 20,
    opacity: 0,
    duration: 0.8,
    ease: "power4.inOut",
  });

  ScrollTrigger.create({
    trigger: item,
    start: "top 95%",
    onEnter: function () {
      tl.play();
    },
  });
});

// Select all elements with the class "box"
//—————————————————————————————————————

$("[gsap-stagger-opacity]").each(function (index, element) {
  let item = $(this);

  const numColumns = 2;

  // Loop through each box element

  // Calculate the row and column index
  const rowIndex = Math.floor(index / numColumns);
  const columnIndex = index % numColumns;

  // Calculate the delay based on the row and column index
  const delay = rowIndex * 0.2 + columnIndex * 0.1; // Adjust the delay values as needed

  // Define the animation for each box using GSAP
  gsap.from(item, {
    opacity: 0, // Start from opacity 0 (hidden)
    yPercent: 10, // Animate along the Y-axis
    duration: 0.9, // Animation duration (0.5 seconds)
    delay: delay, // Apply the calculated delay
    ease: "power4.inOut",
    scrollTrigger: {
      trigger: item, // Trigger animation when the specific box comes into view
      start: "top 90%", // Start the animation when the top of the box is 80% in view
      toggleActions: "play none none none", // Play animation when triggered, do not reverse
      once: true, // Trigger animation only once when box enters viewport
    },
  });
});

//Refresh ScrollTrigger when page height changes
//—————————————————————————————————————

let previousDocumentHeight = $(document).height();

// Function to check if document height has changed
function checkDocumentHeightChange() {
  const currentDocumentHeight = $(document).height();
  if (currentDocumentHeight !== previousDocumentHeight) {
    //console.log("Document height changed!");
    gsap.delayedCall(0.1, () => {
      // Add a slight delay to ensure changes are applied
      ScrollTrigger.refresh(); // Recalculate ScrollTrigger positions
    });
    // Perform actions based on the detected height change
    // For example, trigger a function or update ScrollTrigger
    previousDocumentHeight = currentDocumentHeight; // Update previous height
  }
}

// Check for document height changes every 500 milliseconds (adjust as needed)
setInterval(checkDocumentHeightChange, 250);

// Avoid flash of unstyled content

// MENU LINKS
// MENU LINKS
//—————————————————————————————————————
//—————————————————————————————————————

//Close nav
$(".nav_background").on("click", function () {
  $(".nav_button").click();
});
//});

// Check if each element with class '.nav_menu_link' also has class '.w--current'
var hasCurrent = true;
$(".nav_menu_link").each(function () {
  if ($(this).hasClass("w--current")) {
    hasCurrent = false;
  } else {
  }
});

if (hasCurrent) {
  $(".nav_menu_link").css("opacity", "1");

  $(".nav_menu_link").hover(
    function () {
      $(".nav_menu_link:not(:hover)").css("opacity", "0.5");
    },
    function () {
      $(".nav_menu_link").css("opacity", "1");
    },
  );
}

// FLIP
gsap.registerPlugin(Flip);

/*
const tl = gsap.timeline();

// Add animations to the timeline
tl.from(".entry-animation-logo", {
    duration: 1,
    yPercent: 100,
    ease: "power4.inOut"
  }).from(".hero-anim-start", {
    duration: 1,
    scale: 0,
    //yPercent: 100,
    ease: "power4.inOut"
  }, "<")
  .to(".hero-anim-background", {
    duration: .7,
    height: 0,
    ease: "power4.inOut",
    onStart: function () {
      // Custom function to run at the start of the animation
      console.log("Animation started!");
      // Additional setup or initial actions can be added here
    },
  }, "+=.1")
  .to(".entry-animation-logo", {
    duration: .5,
    xPercent: 100,
    ease: "power4.inOut"
  }) // Start this animation 1 second after the end of the previous animation
  .add(() => {
    // Animation complete callback - Trigger GSAP Flip animation
    const widthHeight = document.querySelector(".main-wrapper");
    const container1 = widthHeight.querySelector(".hero-image-anim-wrapper");
    const container2 = widthHeight.querySelector(".hero-anim-end");
    const box = widthHeight.querySelector(".hero-anim-start");
    const state = Flip.getState(box);

    const parent = box.parentElement === container1 ? container2 : container1;
    parent.appendChild(box);

    Flip.from(state, { duration: 1, ease: "power4.inOut" });
  }); */

/*
const widthHeight = document.querySelector(".main-wrapper");

const container1 = widthHeight.querySelector(".hero-image-anim-wrapper"),
  container2 = widthHeight.querySelector(".hero-anim-end"),
  box = widthHeight.querySelector(".hero-anim-start");

// Initial state for Flip animation
const state = Flip.getState(box);

const tl = gsap.timeline();
// Add animations to the timeline
tl.from(".hero-anim-start", {
    duration: .9,
    scale: 0,
    ease: "power4.inOut"
  })
  .from(".entry-animation-logo", {
    duration: 1.2,
    xPercent: -10,
    opacity: 0,
    scale: 0,
    ease: "power4.inOut"
  }, "-=.9")
  .to(".hero-anim-background", {
    duration: 0.9,
    height: 0,
    ease: "power4.inOut"
  }, "+=0.1") // Delayed start for hero-anim-background animation
  .to({}, { // Empty tween to synchronize timing
    duration: 0.01,
    onStart: function () {
      // Trigger the Flip animation when the to() animation starts
      const parent = box.parentElement === container1 ? container2 : container1;
      parent.appendChild(box);

      Flip.from(state, { duration: 1, ease: "power4.inOut" });
    }
  }, "-=.3")
  .to(".entry-animation-logo", {
    duration: 0.9,
    xPercent: 150,
    opacity: 0,
    ease: "power4.inOut"
  }, "-=.4")
  .from($("[gsap-home-hero-title]").find(".char"), {
    yPercent: 100,
    duration: 0.5,
    ease: "power3.out",
    stagger: { amount: 0.15 },
  }, "-=.4")
  .from($("[gsap-home-hero-subtitle]").find(".char"), {
    yPercent: 100,
    duration: 0.5,
    ease: "power3.out",
    stagger: { amount: 0.15 },
  }, "-=.3")
  .from($("[gsap-home-hero-button]"), {
    yPercent: 30,
    opacity: 0,
    duration: 0.5,
    ease: "power3.out",
  }, "-=.2")
  .from($("[gsap-home-hero-block]"), {
    yPercent: 30,
    opacity: 0,
    duration: 0.5,
    ease: "power3.out",
  }, "-=.0")
  .from($("[gsap-home-nav]"), {
    yPercent: -100,
    duration: 0.8,
    ease: "power3.out",
  }, "-=1.4")
  .add(() => {
    $(".home-animation-wrapper").remove();
    // Animation complete callback
    //console.log("Animations complete!");
    // Additional actions can be performed after all animations finish
  });
*/

gsap.set("[text-split]", { opacity: 1 });
gsap.set("[gsap-line-reveal]", { opacity: 1 });
